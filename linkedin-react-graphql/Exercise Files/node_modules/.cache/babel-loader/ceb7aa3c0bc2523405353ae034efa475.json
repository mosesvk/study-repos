{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mosesvk/Documents/Programming/study-repos/linkedin-react-graphql/src/App.js\",\n    _s = $RefreshSig$();\n\nimport github from \"./db.js\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport query from \"./Query\";\nimport RepoInfo from \"./RepoInfo\";\nimport SearchBox from \"./SearchBox\";\nimport NavButtons from \"./NavButtons\";\n\nfunction App() {\n  _s();\n\n  let [userName, setUserName] = useState(\"\");\n  let [repoList, setRepoList] = useState(null);\n  let [pageCount, setPageCount] = useState(10);\n  let [queryString, setQueryString] = useState(\"\");\n  let [totalCount, setTotalCount] = useState(null);\n  let [startCursor, setStartCursor] = useState(null);\n  let [endCursor, setEndCursor] = useState(null);\n  let [hasPreviousPage, setHasPreviousPage] = useState(false);\n  let [hasNextPage, setHasNextPage] = useState(true);\n  let [paginationKeyword, setPaginationKeyword] = useState(\"first\");\n  let [paginationString, setPaginationString] = useState(\"\");\n  const fetchData = useCallback(() => {\n    const queryText = JSON.stringify(query(pageCount, queryString, paginationKeyword, paginationString));\n    fetch(github.baseURL, {\n      method: \"POST\",\n      headers: github.headers,\n      body: queryText\n    }).then(response => response.json()).then(data => {\n      var _data$data$search$pag, _data$data$search$pag2, _data$data$search$pag3, _data$data$search$pag4;\n\n      const viewer = data.data.viewer;\n      const repos = data.data.search.edges;\n      const total = data.data.search.repositoryCount;\n      const start = (_data$data$search$pag = data.data.search.pageInfo) === null || _data$data$search$pag === void 0 ? void 0 : _data$data$search$pag.startCursor;\n      const end = (_data$data$search$pag2 = data.data.search.pageInfo) === null || _data$data$search$pag2 === void 0 ? void 0 : _data$data$search$pag2.endCursor;\n      const next = (_data$data$search$pag3 = data.data.search.pageInfo) === null || _data$data$search$pag3 === void 0 ? void 0 : _data$data$search$pag3.hasNextPage;\n      const prev = (_data$data$search$pag4 = data.data.search.pageInfo) === null || _data$data$search$pag4 === void 0 ? void 0 : _data$data$search$pag4.hasPreviousPage;\n      setUserName(viewer.name);\n      setRepoList(repos);\n      setTotalCount(total);\n      setStartCursor(start);\n      setEndCursor(end);\n      setHasNextPage(next);\n      setHasPreviousPage(prev);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [pageCount, queryString, paginationString, paginationKeyword]);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-primary\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"bi bi-diagram-2-fill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), \" Repos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hey there \", userName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      totalCount: totalCount,\n      pageCount: pageCount,\n      queryString: queryString,\n      onTotalChange: myNumber => {\n        setPageCount(myNumber);\n      },\n      onQueryChange: myString => {\n        setQueryString(myString);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavButtons, {\n      start: startCursor,\n      end: endCursor,\n      next: hasNextPage,\n      previous: hasPreviousPage,\n      onPage: (myKeyword, myString) => {\n        setPaginationKeyword(myKeyword);\n        setPaginationString(myString);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), repoList && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group list-group-flush\",\n      children: repoList.map(repo => /*#__PURE__*/_jsxDEV(RepoInfo, {\n        repo: repo.node\n      }, repo.node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavButtons, {\n      start: startCursor,\n      end: endCursor,\n      next: hasNextPage,\n      previous: hasPreviousPage,\n      onPage: (myKeyword, myString) => {\n        setPaginationKeyword(myKeyword);\n        setPaginationString(myString);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0GRXINIyapx6U96tUzVRtyRoO8E=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mosesvk/Documents/Programming/study-repos/linkedin-react-graphql/src/App.js"],"names":["github","useEffect","useState","useCallback","query","RepoInfo","SearchBox","NavButtons","App","userName","setUserName","repoList","setRepoList","pageCount","setPageCount","queryString","setQueryString","totalCount","setTotalCount","startCursor","setStartCursor","endCursor","setEndCursor","hasPreviousPage","setHasPreviousPage","hasNextPage","setHasNextPage","paginationKeyword","setPaginationKeyword","paginationString","setPaginationString","fetchData","queryText","JSON","stringify","fetch","baseURL","method","headers","body","then","response","json","data","viewer","repos","search","edges","total","repositoryCount","start","pageInfo","end","next","prev","name","catch","err","console","log","myNumber","myString","myKeyword","map","repo","node","id"],"mappings":"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","sourcesContent":["import github from \"./db.js\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport query from \"./Query\";\nimport RepoInfo from \"./RepoInfo\";\nimport SearchBox from \"./SearchBox\";\nimport NavButtons from \"./NavButtons\";\n\nfunction App() {\n  let [userName, setUserName] = useState(\"\");\n  let [repoList, setRepoList] = useState(null);\n  let [pageCount, setPageCount] = useState(10);\n  let [queryString, setQueryString] = useState(\"\");\n  let [totalCount, setTotalCount] = useState(null);\n\n  let [startCursor, setStartCursor] = useState(null);\n  let [endCursor, setEndCursor] = useState(null);\n  let [hasPreviousPage, setHasPreviousPage] = useState(false);\n  let [hasNextPage, setHasNextPage] = useState(true);\n  let [paginationKeyword, setPaginationKeyword] = useState(\"first\");\n  let [paginationString, setPaginationString] = useState(\"\");\n\n  const fetchData = useCallback(() => {\n    const queryText = JSON.stringify(\n      query(pageCount, queryString, paginationKeyword, paginationString)\n    );\n\n    fetch(github.baseURL, {\n      method: \"POST\",\n      headers: github.headers,\n      body: queryText,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const viewer = data.data.viewer;\n        const repos = data.data.search.edges;\n        const total = data.data.search.repositoryCount;\n        const start = data.data.search.pageInfo?.startCursor;\n        const end = data.data.search.pageInfo?.endCursor;\n        const next = data.data.search.pageInfo?.hasNextPage;\n        const prev = data.data.search.pageInfo?.hasPreviousPage;\n\n        setUserName(viewer.name);\n        setRepoList(repos);\n        setTotalCount(total);\n\n        setStartCursor(start);\n        setEndCursor(end);\n        setHasNextPage(next);\n        setHasPreviousPage(prev);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [pageCount, queryString, paginationString, paginationKeyword]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <div className=\"App container mt-5\">\n      <h1 className=\"text-primary\">\n        <i className=\"bi bi-diagram-2-fill\"></i> Repos\n      </h1>\n      <p>Hey there {userName}</p>\n      <SearchBox\n        totalCount={totalCount}\n        pageCount={pageCount}\n        queryString={queryString}\n        onTotalChange={(myNumber) => {\n          setPageCount(myNumber);\n        }}\n        onQueryChange={(myString) => {\n          setQueryString(myString);\n        }}\n      />\n      <NavButtons\n        start={startCursor}\n        end={endCursor}\n        next={hasNextPage}\n        previous={hasPreviousPage}\n        onPage={(myKeyword, myString) => {\n          setPaginationKeyword(myKeyword);\n          setPaginationString(myString);\n        }}\n      />\n      {repoList && (\n        <ul className=\"list-group list-group-flush\">\n          {repoList.map((repo) => (\n            <RepoInfo key={repo.node.id} repo={repo.node} />\n          ))}\n        </ul>\n      )}\n\n      <NavButtons\n        start={startCursor}\n        end={endCursor}\n        next={hasNextPage}\n        previous={hasPreviousPage}\n        onPage={(myKeyword, myString) => {\n          setPaginationKeyword(myKeyword);\n          setPaginationString(myString);\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}